; BLANK.SCE empty database for DAAD V2
;
; This database provides a way of adapting PAW & DAAD V1 sources to DAAD V2. 
; Note that flags which were automatically decremented no longer do so.
;
; English language template, recreated by Stefan Vogt, Pond Soft [17-7-18].

;------------------------------------------------------------------------------
;
; 'Everything is possible in this life ( but it all costs time and money! )'
;                                                              Tim Gilberts
;
;                                      'And also WE ALL have to work for it'
;                                                            Andrés Samudio
;
;                                                                   [8-6-89]
;
;------------------------------------------------------------------------------


; --- Please don't remove the following code, it makes sure the game works fine for all supported targets 
#ifdef "SPLIT"
#define hasSplitMode 1
#endif

#ifndef "tape"
#ifndef "st"
#ifndef "amiga"
#ifndef "zx128"
#extern "MALUVA"
#endif
#endif
#endif
#endif


#ifdef "html"
#define nativeraster 1
#endif
#ifdef "pcw"
#define nativeraster 1
#endif
#ifdef "amiga"
#define nativeraster 1
#endif
#ifdef "pc"
#define nativeraster 1
#endif
#ifdef "st"
#define nativeraster 1
#endif
#ifdef "nativeraster"
#echo  "Target supports native raster graphics"
#endif

#ifdef "uno"
#int "MLV_UNO_INT.BIN"
#define canBoostSpeed 1
#endif

#ifdef "next"
#define canBoostSpeed 1
#endif

#ifdef "cpc"
#int "MLV_CPC_INT.BIN"
#endif

#ifdef "hasSplitMode"
#echo "Target will make use of split mode"
#endif

#ifdef "canBoostSpeed"
#echo "Target has turbo mode"
#endif

#ifdef "tape"
#define noretryImage 1
#endif

#ifdef "nativeraster"
#define noretryImage 1
#endif

; --- Please don't remove the code above, it makes sure the game works fine for all supported targets 



; System flags 0-63
#define fDark               0
#define fObjectsCarried     1
#define fDarkF              28
#define fGFlags             29     ; This is best tested using HASAT GMODE
#define fScore              30
#define fTurns              31    ; 2 bytes
#define fTurnsHi            32

#define fVerb               33
#define fNoun               34
#define fAdject1            35
#define fAdverb             36
#define fMaxCarr            37
#define fPlayer             38
#define fPrep               43
#define fNoun2              44
#define fAdject2            45
#define fCPronounNoun       46
#define fCPronounAdject     47
#define fTimeout            48
#define fTimeoutFlags       49
#define fDoallObjNo         50
#define fRefObject          51
#define fStrength           52
#define fObjFlags           53
#define fRefObjLoc          54
#define fRefObjWeight       55
#define fRefObjIsContainer  56
#define fRefObjisWearable   57
#define fRefObjAttr1        58
#define fRefObjAttr2        59
#define fInkeyKey1          60
#define fInkeyKey2          61
#define fScreenMode         62     ; 2=Text, 4=CGA, 13=EGA, 141=VGA
#define fCurrentWindow      63     ; Which window is active at the moment

; Attr flags for HASAT/HASNAT
#define WEARABLE  23            ;Current object is wearable
#define CONTAINER 31            ;Current object is a container
#define LISTED    55            ;Objects - listed by LISTOBJ etc
#define OA_CLIST  54            ; - continous list
#define OO_CLIST  64
#define TIMEOUT   87            ;If Timeout last frame
#define IA_RBUF   85            ;Input - recall buffer
#define IO_RBUF   32
#define IA_PINP   84            ; - reprint in stream
#define IO_PINP   16
#define IA_CSTR   83            ; - clear stream
#define IO_CSTR   8
#define IA_TAKEY  82            ; - timeout on any key
#define IO_TAKEY  4
#define IA_TMORE  81            ; - timeout on More...
#define IO_TMORE  2
#define IA_TSTAR  80            ; - timeout at start of input
#define IO_TSTAR  1
#define GMODE     247           ;Graphics - available
#define GA_MDRW   246           ; - Invisible draw (drawstring)
#define GO_MDRW   64
#define GA_POFF   245           ; - Pictures OFF (drawstring)
#define GO_POFF   32
#define GA_WKEY   244           ; - Wait after drawing (drawstring)
#define GO_WKEY   16
#define GA_CBOR   243           ; - Change BORDER (drawstring)
#define GO_CBOR   8
#define MOUSE     240           ;mouse available (!DRAW only)


/CTL    ;Control Section (null char is an underline)
_       


;------------------------------------------------------------------------------
/VOC    ;Vocabulary

;                       Movements ie verbs and nouns < 14
N       2       noun
NORTH   2       noun
S       3       noun
SOUTH   3       noun
E       4       noun
EAST    4       noun
W       5       noun
WEST    5       noun
NE      6       noun
NW      7       noun
SE      8       noun
SW      9       noun
U       10      noun
UP      10      noun
ASCEN   10      verb
D       11      noun
DOWN    11      noun
DESCE   11      verb

;                       Nouns   <20 means can be used as verbs
;                               <50 means a proper noun ie not an 'IT'
I       14      noun
INVEN   14      noun
ALL     20      noun
LOT     20      noun
EVERY   20      noun

;
TORCH   100     noun

;                       Verbs
GET     20      verb
TAKE    20      verb
DROP    21      verb
PUT     21      verb
REMOV   22      verb
WEAR    23      verb
R       24      verb
REDES   24      verb
QUIT    25      verb
Q       25      verb
STOP    25      verb
SAVE    26      verb
LOAD    27      verb
RAMSA   28      verb
RAMLO   29      verb
LOOK    30      verb
EXAMI   30      verb
SAY     31      verb
ASK     31      verb
TALK    31      verb
SPEAK   31      verb

;                               Adjectives
SMALL   2       adjective
BIG     3       adjective
LARGE   3       adjective
OLD     4       adjective
NEW     5       adjective
HARD    6       adjective
SOFT    7       adjective
SHORT   8       adjective
LONG    9       adjective

;                               Adverbs
QUICK   2       adverb
SLOWL   3       adverb
QUIET   4       adverb
LOUDL   5       adverb
CAREF   6       adverb
SOFTL   6       adverb
GENTL   6       adverb

;                               Prepositions
TO      2       preposition
FROM    3       preposition
IN      4       preposition
OUT     5       preposition
THROU   6       preposition
OVER    7       preposition
UNDER   8       preposition
BY      9       preposition
ON      10      preposition
OFF     11      preposition
AT      12      preposition
EXCEP   13      preposition

;                               Pronouns
IT      2       pronoun
THEM    2       pronoun

;                               Conjugations
AND     2       conjugation
THEN    2       conjugation



;------------------------------------------------------------------------------
/STX    ;System Message Texts
/0 "It's too dark to see anything."
/1 "I can also see: "
/2 "#nWhat now?"
/3 "#nWhat next?"
/4 "#nWhat should I do now?"
/5 "#nWhat should I do next?"
/6 "#nI was not able to understand any of that.  Please try again."
/7 "#nI can't go in that direction."
/8 "I can't do that.#n"
/9 "I have with me:#n"
/10 "I am wearing:#n"
/11 "";*Spare
/12 "Are you sure? "
/13 "Would you like another go? "
/14 "";*Spare
/15 "OK.#n"
/16 "Press any key to continue.#n"
/17 "";*You have taken
/18 "";*\sturn
/19 "";*s
/20 "";*.[CR]
/21 "";*You have scored
/22 "";*%[CR]
/23 "I'm not wearing one of those.#n"
/24 "I can't.  I'm wearing the _."
/25 "I already have the _."
/26 "There isn't one of those here."
/27 "I can't carry any more things."
/28 "I don't have one of those."
/29 "I'm already wearing the _."
/30 "Y"    ;One upper case character only
/31 "N"    ;One upper case character only
/32 "More..."
/33 "#n>"
/34 "";*Spare
/35 "#nTime passes...#n"
/36 "I now have the _.#n"
/37 "I'm now wearing the _.#n"
/38 "I've removed the _.#n"
/39 "I've dropped the _.#n"
/40 "I can't wear the _.#n"
/41 "I can't remove the _.#n"
/42 "I can't remove the _.  My hands are full.#n"
/43 "The _ weighs too much for me.#n"
/44 "#nThe _ is in the "
/45 "The _ isn't in the "
/46 ", "
/47 " and "
/48 ".#n"
/49 "I don't have the _.#n"
/50 "I'm not wearing the _.#n"
/51 ".#n"
/52 "There isn't one of those in the "
/53 "Nothing.#n"
/54 "T" ;Letter for Tape
/55 "D" ;Disc
/56 "Drive not ready - press any key to retry.#n"
/57 "I/O Error.#n"
/58 "Disc or Directory may be full."
/59 "Invalid filename."
/60 "Type in name of file:"
/61 "Start tape.#n"
/62 "Tape or Disc?"


;------------------------------------------------------------------------------
/MTX    ;Message Texts
;------------------------------------------------------------------------------
/OTX    ;Object Texts
/0 "A pocket torch. (lit)"


;------------------------------------------------------------------------------
/LTX    ;Location Texts
/0 "EMPTY DATABASE - DAAD V2."
/1 "I'm at location number one. A road leads north."
/2 "I'm at location number two. A road leads south."


;------------------------------------------------------------------------------
/CON    ;Connections
/0
/1
N 2
/2
S 1



;------------------------------------------------------------------------------
/OBJ    ;Object Definitions
;obj  starts  weight    c w  5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0    noun   adjective
;num    at
/0      CARRIED 1       _ _  _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    TORCH  _


;------------------------------------------------------------------------------
/PRO 0       ;Main Location Loop

> _       _     AT      0                ; Starting game
                #ifdef "canBoostSpeed"
                #echo "Target using boosted CPU speed"
                XSPEED  1                ; if a boostable target, boost CPU speed to 7Mhz
                #endif
                #ifdef "hasSplitMode"    ; If a split screen target, set split screen
                #echo "Target using split mode"
                XSPLITSCR 1
                #endif
                PROCESS 6                ; then we need init sequence

> _       _     WINDOW  0                ; Select graphics window
                CLEAR   fDarkF           ; Assume light
;               MINUS   2       1       ; Decrement flag 2    (See notes)
                NOTZERO 0
;               MINUS   3       1       ; & Flag 3 if Dark    (See notes)
                ABSENT  0
;               MINUS   4       1       ; & Flag 4 if No Lamp (See notes)
                SET     fDarkF           ; Dark

#ifndef "zx128"
> _       _     CLEAR 20
#ifndef "tape"
                ZERO fDarkF
                XPICTURE @fPlayer        ; If there is a picture, Load it
#endif
#ifdef "nativeraster"
                DISPLAY @fDarkF         ; & Display it if not dark, else CLS
#endif
#ifdef "next"
                GT  20 127               ; Muestralo si no oscuro; si oscuro
                XNEXTCLS                 ; Disable adn clear Layer2
#endif

> _      _      NOTZERO fDarkF
                CLS


#ifndef "noretryImage"
> _        _    GT 20 127
                XPICTURE 255            ; If XPICTURE failed, then try to paint filler picture 255
                #ifdef "nativeraster"
                DISPLAY @fDarkF
                #endif

#endif

#ifndef "hasSplitMode"
> _        _    GT 20 127                ; XPICTURE failed to load
                CLS
                WINDOW 1    
                WINAT 0 0
                WINSIZE 25      127     ; Maximum window
                CLS
                SKIP 1
#endif

> _        _    WINDOW 1
                #ifndef "tape"
                WINAT 14 0
                #endif

#else
;ZX 128
> _       _     PICTURE @fPlayer        ; If there is image, it loads it
                DISPLAY @fDarkF         ; Show it if not dark, else do a CLS
                SKIP    2               ; Skip to window on text on lower edge

> _        _    PICTURE 255             ; On image fail, loads image num. 255
                DISPLAY @fDarkF
                SKIP    1               ; Skip to window on text on lower edge

> _        _    CLS                     ; Fallback si no image found
                WINDOW  1
                WINAT   0 0
                WINSIZE 24      42      ; All screen for text
                CLS
                SKIP    1               ; Skip.

> _        _    WINDOW 1                ; Window on the lower end of the screen
                WINAT  14 0
#endif

> _       _     NOTZERO fDarkF           ; Dark
                SYSMESS 0

> _       _     ZERO    fDarkF
                DESC    @fPlayer        ; Doesn't exit loop now

> _       _     PROCESS 3

; Now we use Process 1 as the main code loop, a return from it is the end
; of the game

> _       _     PROCESS 1

;------------------------------------------------------------------------------
/PRO 1
> _       _     PROCESS 4               ; Do process 2 stuff here

;> _       _     MINUS   5       1       ; Update auto flags
;                MINUS   6       1       ; These are not supported anymore
;                MINUS   7       1       ; as we use the low section as
;                MINUS   8       1       ; a small stack
;                NOTZERO 0               ; But should you need them
;                MINUS   9       1       ; this is the Version 1 DAAD code!
;                ABSENT  0
;                MINUS   10      1

> _       _     PARSE   0               ; Get next LS from current buffer
                PROCESS 2               ; Failed cos of invalid or timeout
                REDO

> _       _     EQ      fTurns   255     ; Max for one byte
                PLUS    fTurnsHi 1
                CLEAR   fTurns
                SKIP    1

> _       _     PLUS    fTurns   1

> _       _     PROCESS 5               ; Do any commands
                ISDONE                  ; Done something
                REDO

> _       _     MOVE    fPlayer          ; No so try to move player
                CLS
                RESTART                 ; Absolute jump to start process 0

> _       _     NEWTEXT
                LT      fVerb    14
                SYSMESS 7
                REDO

> _       _     SYSMESS 8
                REDO


;------------------------------------------------------------------------------
/PRO 2
> _       _     HASAT TIMEOUT
                SYSMESS 35
                DONE

> _       _     SYSMESS 6               ; I didn't understand

;------------------------------------------------------------------------------
/PRO 3 ; Old process 1. Note that both the response table and the old PAW 
; process tables 1 and 2 can now be anywhere or completely absent. Everything
; is implemented in the DAAD language itself.

;This is better carried out thus
> _       _     NEWLINE
                ZERO    fDarkF            ; Isn't dark
                LISTOBJ

;than the old system needed in Version 1, without accesss to DarkF
;> _       _     NEWLINE
;                ZERO    0               ;If it is light...
;                ABSENT  0               ;and the light source is absent...
;                LISTOBJ                 ;List the objects

;> _       _     PRESENT 0               ;If the light source is present...
;                LISTOBJ                 ;List the objects

;------------------------------------------------------------------------------
/PRO 4 ; Old process 2
;------------------------------------------------------------------------------
/PRO 5 ; Command decoder

> I       _     SYSMESS 9
                LISTAT  CARRIED
                SYSMESS 10
                LISTAT  WORN
                DONE

> GET     ALL   DOALL   HERE
> GET     _     AUTOG
                DONE

> DROP    ALL   DOALL   CARRIED
> DROP    _     AUTOD
                DONE

> REMOVE  ALL   DOALL   WORN
> REMOVE  _     AUTOR
                DONE

> WEAR    ALL   DOALL   CARRIED
> WEAR    _     AUTOW
                DONE

> R       _     CLS
                RESTART

> Q       _     QUIT
                END

> Q       _     DONE                    ;Not like QUIT on PAW

> SAVE    _     #ifndef "tape"
                XSAVE 0                  ;ditto
                #endif
                #ifdef "tape"
                SAVE 0
                #endif
                CLS
                RESTART

> LOAD    _     #ifndef "tape"
                XLOAD  0
                #endif
                #ifdef "tape"
                LOAD   0
                #endif
                CLS
                RESTART

> RAMSA   _     RAMSAVE
                CLS
                RESTART

> RAMLO   _     RAMLOAD 255             ;Reload all flags
                CLS
                RESTART

> LOOK    _     CLS
                RESTART
;------------------------------------------------------------------------------
/PRO 6 ; Initialise the DAAD system

#ifndef "zx128"
> _       _     WINDOW  1               ; Windows are random
                #ifdef "pc"   
                PAPER 0
                INK 15
                #endif
             
> _       _     #ifndef "tape"
                WINAT   14       0
                #endif
                #ifdef "tape"
                WINAT   0       0
                #endif
                WINSIZE 25      127     ; Maximum window
                CLS
                DESC    0               ; Introduction
                #ifndef "tape"
                    #ifdef "nativeraster"
                        WINDOW 0
                        PICTURE 0
                        DISPLAY 0
                    #else
                        XPICTURE 0
                        WINDOW 0
                    #endif
                #endif
#endif
> _       _     
                ANYKEY
                CLS
                SET   255             
#else
;ZX 128
> _       _     WINDOW  1               ; Windows are random
                WINAT   14       0
                WINSIZE 25      127     ; Maximum window
                CLS
                PICTURE 0
                DISPLAY 0
                SKIP    1

> _       _     WINAT   0       0
                WINSIZE 25 127
                CLS

> _       _     DESC    0               ; Introduction
                ANYKEY
                CLS
                SET   255
#endif

> _       _     MINUS  255 1          ; Clear all flags
                NOTEQ   255  fGFlags  ; except fGFlags!!!
                CLEAR   @255

> _       _     NOTZERO 255             
                SKIP    -2              

> _       _     RESET                   ; Set objects to start location & Flag 1
                LET     fStrength 10
                LET     fMaxCarr  4
                SET     fCPronounNoun
                SET     fCPronounAdject
                GOTO    1               ; Main game

/END

